package würfel;

import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

/**
 *
 * @author Dundun
 */
public class Würfelbecher extends javax.swing.JFrame implements MouseListener{
    private boolean[] active;
    private WürfelComponent[] würfel;
    private int wurf=0;
    
    /**
     * Creates new form Würfelbecher
     */
    public Würfelbecher() {
        initComponents();
        active=new boolean[5];
        würfel=new WürfelComponent[5];
        würfel[0]=würfel1;
        würfel[1]=würfel2;
        würfel[2]=würfel3;
        würfel[3]=würfel4;
        würfel[4]=würfel5;
        for(int i=0;i<active.length;i++) {
            active[i]=true;
            würfel[i].addMouseListener(this);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        würfel1 = new würfel.WürfelComponent();
        würfel2 = new würfel.WürfelComponent();
        würfel3 = new würfel.WürfelComponent();
        würfel4 = new würfel.WürfelComponent();
        würfel5 = new würfel.WürfelComponent();
        werfen = new javax.swing.JButton();
        punkte = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout würfel1Layout = new javax.swing.GroupLayout(würfel1);
        würfel1.setLayout(würfel1Layout);
        würfel1Layout.setHorizontalGroup(
            würfel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        würfel1Layout.setVerticalGroup(
            würfel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout würfel2Layout = new javax.swing.GroupLayout(würfel2);
        würfel2.setLayout(würfel2Layout);
        würfel2Layout.setHorizontalGroup(
            würfel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        würfel2Layout.setVerticalGroup(
            würfel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout würfel3Layout = new javax.swing.GroupLayout(würfel3);
        würfel3.setLayout(würfel3Layout);
        würfel3Layout.setHorizontalGroup(
            würfel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        würfel3Layout.setVerticalGroup(
            würfel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout würfel4Layout = new javax.swing.GroupLayout(würfel4);
        würfel4.setLayout(würfel4Layout);
        würfel4Layout.setHorizontalGroup(
            würfel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        würfel4Layout.setVerticalGroup(
            würfel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout würfel5Layout = new javax.swing.GroupLayout(würfel5);
        würfel5.setLayout(würfel5Layout);
        würfel5Layout.setHorizontalGroup(
            würfel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        würfel5Layout.setVerticalGroup(
            würfel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        werfen.setText("Würfeln");
        werfen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                werfenActionPerformed(evt);
            }
        });

        punkte.setForeground(new java.awt.Color(255, 0, 0));
        punkte.setText("Sand");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(würfel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(würfel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(würfel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(würfel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(würfel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(werfen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(punkte)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(würfel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(würfel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(würfel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(würfel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(würfel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(werfen)
                    .addComponent(punkte))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void werfenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_werfenActionPerformed
        for(int i=0;i<active.length;i++){
            if(active[i])new Thread(würfel[i]).start();
        }
    }//GEN-LAST:event_werfenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Würfelbecher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Würfelbecher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Würfelbecher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Würfelbecher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Würfelbecher().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel punkte;
    private javax.swing.JButton werfen;
    private würfel.WürfelComponent würfel1;
    private würfel.WürfelComponent würfel2;
    private würfel.WürfelComponent würfel3;
    private würfel.WürfelComponent würfel4;
    private würfel.WürfelComponent würfel5;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        int i=0;
        WürfelComponent source=((WürfelComponent)(e.getSource()));
        while(i<active.length){
            if(source.equals(würfel[i]))break;
            i++;
        }
        if(active[i]){
            source.setBGColor(Color.GRAY);
        }else{
            source.setBGColor(Color.YELLOW);
        }
        active[i]=!active[i];
        zählePunkte();
    }

    @Override
    public void mousePressed(MouseEvent e) {}

    @Override
    public void mouseReleased(MouseEvent e) {}

    @Override
    public void mouseEntered(MouseEvent e) {
        int i=0;
        WürfelComponent source=((WürfelComponent)(e.getSource()));
        while(i<active.length){
            if(source.equals(würfel[i]))break;
            i++;
        }
        if(active[i])source.setBGColor(Color.YELLOW);
    }

    @Override
    public void mouseExited(MouseEvent e) {
        int i=0;
        WürfelComponent source=((WürfelComponent)(e.getSource()));
        while(i<active.length){
            if(source.equals(würfel[i]))break;
            i++;
        }
        if(active[i])source.setBGColor(Color.WHITE);
    }

    private void zählePunkte() {
        boolean vier=false,zwei=false,pasch=true;
        int n=0;
        for(int i=0;i<würfel.length;i++){
           if(!active[i]){
               if(würfel1.getAugen()!=würfel[i].getAugen())pasch=false;
               if(würfel[i].getAugen()==4 && !vier)vier=true;
               else if(würfel[i].getAugen()==2 && !zwei)zwei=true;
               else n+=würfel[i].getAugen();
           }else pasch=false;
        }
        if(pasch){
            punkte.setForeground(new java.awt.Color(0,255, 0));
            punkte.setText(würfel1.getAugen()+"er-Pasch!");
            javax.swing.JOptionPane.showMessageDialog(this,"Du bist raus!");
        }else if(!vier || !zwei){
            punkte.setForeground(new java.awt.Color(255, 0, 0));
            punkte.setText("Sand");
        }else{
            punkte.setForeground(new java.awt.Color(0,255, 0));
            punkte.setText(n+" Punkte");
            if(n==18){
                javax.swing.JOptionPane.showMessageDialog(this,"Du bist raus!");
            }
        }
    }
}
