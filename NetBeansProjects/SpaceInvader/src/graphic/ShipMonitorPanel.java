/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphic;

import actors.Fighter;
import actors.Ship;
import armory.Gun;
import java.awt.Color;

/**
 *
 * @author Dundun
 */
public class ShipMonitorPanel extends javax.swing.JPanel {

    private static ShipMonitorPanel instance;
    public static final Color LIGHT_BLUE = new Color(51, 153, 255);
    public static final Color LIGHT_GRAY = new Color(240, 240, 240);

    /**
     * Creates new form ShipMonitorPanel
     */
    public ShipMonitorPanel() {
        initComponents();
    }

    public static final ShipMonitorPanel getInstance() {
        if (instance == null) {
            synchronized (ShipMonitorPanel.class) {
                if (instance == null) {
                    instance = new ShipMonitorPanel();
                }
            }
        }
        return instance;
    }

    public void refresh() {
        Ship mShip = GameGrid.getInstance().getMShip();
        hpBar.setValue(mShip.getHP() * 100 / mShip.getMaxHp());
        if (hpBar.getValue() < 25) {
            hpBar.setForeground(Color.RED);
        } else if (hpBar.getValue() < 60) {
            hpBar.setForeground(Color.YELLOW);
        } else {
            hpBar.setForeground(Color.GREEN);
        }
        fuelBar.setValue(100);
        if (fuelBar.getValue() < 25) {
            fuelBar.setForeground(Color.RED);
        } else if (fuelBar.getValue() < 60) {
            fuelBar.setForeground(Color.YELLOW);
        } else {
            fuelBar.setForeground(Color.GREEN);
        }
        shieldBar.setValue(0);
        if (shieldBar.getValue() > 30) {
            shieldBar.setForeground(LIGHT_BLUE);
        } else {
            shieldBar.setForeground(Color.RED);
        }
        speedBar.setValue((int) (mShip.getSpeed() * 100 / mShip.getMaxSpeed()));
        if (Fighter.class.isInstance(mShip)) {
            Gun mainWeapon = (Gun) (((Fighter) mShip).getMainWeapon());
            weaponLabel.setText(mainWeapon.toString());
            weaponBar.setValue(mainWeapon.getCooldown() * 100 / mainWeapon.getMaxCooldown());
            if (weaponBar.getValue() > 0) {
                weaponBar.setForeground(Color.RED);
            } else {
                weaponBar.setForeground(Color.GREEN);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hpLabel = new javax.swing.JLabel();
        shieldLabel = new javax.swing.JLabel();
        fuelLabel = new javax.swing.JLabel();
        speedLabel = new javax.swing.JLabel();
        weaponLabel = new javax.swing.JLabel();
        hpBar = new javax.swing.JProgressBar();
        shieldBar = new javax.swing.JProgressBar();
        weaponBar = new javax.swing.JProgressBar();
        speedBar = new javax.swing.JProgressBar();
        fuelBar = new javax.swing.JProgressBar();

        hpLabel.setText("HP: ");

        shieldLabel.setText("Shield:");

        fuelLabel.setText("Fuel:");

        speedLabel.setText("Speed:");

        weaponLabel.setText("Main Weapon:");

        hpBar.setFocusable(false);
        hpBar.setRequestFocusEnabled(false);
        hpBar.setStringPainted(true);

        shieldBar.setFocusable(false);
        shieldBar.setRequestFocusEnabled(false);
        shieldBar.setStringPainted(true);

        weaponBar.setForeground(new java.awt.Color(255, 0, 51));
        weaponBar.setFocusable(false);
        weaponBar.setRequestFocusEnabled(false);
        weaponBar.setStringPainted(true);

        speedBar.setFocusable(false);
        speedBar.setRequestFocusEnabled(false);
        speedBar.setStringPainted(true);

        fuelBar.setFocusable(false);
        fuelBar.setRequestFocusEnabled(false);
        fuelBar.setStringPainted(true);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(weaponLabel)
                    .addComponent(speedLabel)
                    .addComponent(fuelLabel)
                    .addComponent(shieldLabel)
                    .addComponent(hpLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hpBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shieldBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fuelBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(speedBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weaponBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(hpLabel)
                            .addComponent(hpBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(shieldLabel))
                    .addComponent(shieldBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fuelLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(speedLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(weaponLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fuelBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(speedBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(weaponBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(355, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar fuelBar;
    private javax.swing.JLabel fuelLabel;
    private javax.swing.JProgressBar hpBar;
    private javax.swing.JLabel hpLabel;
    private javax.swing.JProgressBar shieldBar;
    private javax.swing.JLabel shieldLabel;
    private javax.swing.JProgressBar speedBar;
    private javax.swing.JLabel speedLabel;
    private javax.swing.JProgressBar weaponBar;
    private javax.swing.JLabel weaponLabel;
    // End of variables declaration//GEN-END:variables
}
