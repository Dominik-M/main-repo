/*
 * Copyright (C) 2021 Dundun <dominikmesserschmidt@googlemail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import main.PlayTimer;

/**
 *
 * @author Dundun <dominikmesserschmidt@googlemail.com>
 */
public class MainFrame extends javax.swing.JFrame {

    public static final int TIMER_DELAY = 50;
    private PlayTimer timeCounter = new main.PlayTimer();
    private final Timer TIMER;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        this.TIMER = new Timer(TIMER_DELAY, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                timeCounter.tick();
                updateUI();
            }
        });
        initComponents();
        timeCounter.setSecondsPerTick(TIMER_DELAY / 1000.0);
        updateUI();
    }

    private void updateUI() {
        int convs = (int) timeCounter.getSeconds();
        timeLabel.setText(String.format("%02d:%02d:%02d", timeCounter.getHours(), timeCounter.getMinutes(), convs));
        if (TIMER.isRunning()) {
            playButton.setText("Stop");
        } else {
            playButton.setText("Play");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        timeLabel = new javax.swing.JLabel();
        playButton = new javax.swing.JButton();
        tickButton = new javax.swing.JButton();
        ffButton = new javax.swing.JButton();
        xffButton = new javax.swing.JButton();
        nsButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        setMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Timer");

        timeLabel.setBackground(new java.awt.Color(255, 255, 255));
        timeLabel.setFont(new java.awt.Font("Consolas", 1, 48)); // NOI18N
        timeLabel.setText("00:00:00");

        playButton.setText("Play");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        tickButton.setText("Tick");
        tickButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tickButtonActionPerformed(evt);
            }
        });

        ffButton.setText("x64");
        ffButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ffButtonActionPerformed(evt);
            }
        });

        xffButton.setText("x1024");
        xffButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xffButtonActionPerformed(evt);
            }
        });

        nsButton.setText("x1");
        nsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nsButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("Options");

        setMenuItem.setText("Set");
        setMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(setMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(playButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tickButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ffButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(xffButton))
                    .addComponent(timeLabel)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(timeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playButton)
                    .addComponent(tickButton)
                    .addComponent(ffButton)
                    .addComponent(xffButton)
                    .addComponent(nsButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setMenuItemActionPerformed
        String input = JOptionPane.showInputDialog(this, "Set Time in format HH:MM:SS");
        try {
            int h = Integer.parseInt(input.substring(0, 2));
            int m = Integer.parseInt(input.substring(3, 5));
            int s = Integer.parseInt(input.substring(6, 8));
            timeCounter = new PlayTimer(h, m, s);
            updateUI();
        } catch (Exception ex) {
            System.err.println(ex);
        }
    }//GEN-LAST:event_setMenuItemActionPerformed

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        if (TIMER.isRunning()) {
            TIMER.stop();
        } else {
            TIMER.start();
        }
        updateUI();
    }//GEN-LAST:event_playButtonActionPerformed

    private void tickButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tickButtonActionPerformed
        double prevValue = timeCounter.getSecondsPerTick();
        timeCounter.setSecondsPerTick(1.0);
        timeCounter.tick();
        updateUI();
        timeCounter.setSecondsPerTick(prevValue);
    }//GEN-LAST:event_tickButtonActionPerformed

    private void ffButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ffButtonActionPerformed
        timeCounter.setSecondsPerTick(64 * TIMER_DELAY / 1000.0);
    }//GEN-LAST:event_ffButtonActionPerformed

    private void xffButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xffButtonActionPerformed
        timeCounter.setSecondsPerTick(1024 * TIMER_DELAY / 1000.0);
    }//GEN-LAST:event_xffButtonActionPerformed

    private void nsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nsButtonActionPerformed
        timeCounter.setSecondsPerTick(TIMER_DELAY / 1000.0);
    }//GEN-LAST:event_nsButtonActionPerformed

    /**
     */
    public static void start() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ffButton;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JButton nsButton;
    private javax.swing.JButton playButton;
    private javax.swing.JMenuItem setMenuItem;
    private javax.swing.JButton tickButton;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JButton xffButton;
    // End of variables declaration//GEN-END:variables
}
