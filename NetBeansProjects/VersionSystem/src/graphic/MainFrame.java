/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphic;

import java.io.File;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import versionsystem.VersionSystem;

/**
 *
 * @author Dominik Messerschmidt <dominik_messerschmidt@yahoo.de>
 */
public class MainFrame extends javax.swing.JFrame {

    private final LinkedList<File> newer = new LinkedList<>();
    private final LinkedList<File> older = new LinkedList<>();

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        super("Project Version Manager");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        destPath = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        chooseSrc = new javax.swing.JButton();
        chooseDest = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        srcPath = new javax.swing.JTextField();
        check = new javax.swing.JButton();
        apply = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        destPath.setText("\\\\Fritz-nas\\fritz.nas\\WD-Elements1023-01\\NetBeansProjects");
        destPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destPathActionPerformed(evt);
            }
        });

        jLabel1.setText("Source Path:");

        chooseSrc.setText("Choose Source File");
        chooseSrc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseSrcActionPerformed(evt);
            }
        });

        chooseDest.setText("Choose Destination File");
        chooseDest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseDestActionPerformed(evt);
            }
        });

        jLabel2.setText("Destination Path:");

        srcPath.setText("C:\\Users\\Steven\\Documents\\NetBeansProjects");

        check.setText("Check for changes");
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });

        apply.setText("Apply new versions");
        apply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyActionPerformed(evt);
            }
        });

        delete.setText("Delete old versions");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        output.setColumns(20);
        output.setRows(5);
        jScrollPane1.setViewportView(output);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(destPath, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                            .addComponent(srcPath))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chooseDest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chooseSrc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(check)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(apply)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(chooseSrc)
                    .addComponent(srcPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chooseDest)
                    .addComponent(destPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(check)
                    .addComponent(apply)
                    .addComponent(delete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void destPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destPathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_destPathActionPerformed

    private void chooseSrcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseSrcActionPerformed
        JFileChooser jfc = new JFileChooser(srcPath.getText());
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = jfc.showDialog(this, "Select Path");
        if (result == JFileChooser.APPROVE_OPTION) {
            srcPath.setText(jfc.getSelectedFile().toString());
        }
    }//GEN-LAST:event_chooseSrcActionPerformed

    private void check() {
        newer.clear();
        File srcDir = null, destDir = null;
        try {
            srcDir = new File(srcPath.getText());
            destDir = new File(destPath.getText());
            for (File sf : srcDir.listFiles()) {
                println("Comparing " + sf.getName());
                boolean exists = false;
                for (File df : destDir.listFiles()) {
                    if (sf.getName().equals(df.getName())) {
                        long result = VersionSystem.compareFiles(sf, df);
                        if (result < 0) {
                            println("source file is older");
                        } else if (result > 0) {
                            println("source file is newer");
                            if (!newer.contains(sf)) {
                                newer.add(sf);
                                older.add(df);
                            } else {
                                System.out.println("hab ich schon");
                            }
                        } else {
                            println("No differences");
                        }
                        exists = true;
                        break;
                    }
                }
                if (!exists) {
                    println(sf.getName() + " not contained in destinated directory");
                    newer.add(sf);
                    older.add(null);
                }
            }
            println("finished. " + newer.size() + " newer versions found.");
        } catch (Exception ex) {
            ex.printStackTrace();
            println("An error occured: " + ex);
            if (destDir == null || !destDir.exists()) {
                println("Cannot access destination directory");
            } else if (srcDir == null || !srcDir.exists()) {
                println("Cannot access source directory");
            }
        }
        println("ready");
    }

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
        new Thread(new Runnable() {

            @Override
            public void run() {
                check();
            }
        }).start();
    }//GEN-LAST:event_checkActionPerformed

    private void applyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyActionPerformed
        for (int i = 0; i < newer.size(); i++) {
            int baselinenumber = 1;
            String fileName;
            if (older.get(i) != null) {
                fileName = older.get(i).getName();
                int index = fileName.lastIndexOf(".");
                if (index > 0) {
                    baselinenumber += Integer.parseInt(fileName.substring(index + 1));
                    fileName = fileName.substring(0, index + 1) + baselinenumber;
                } else {
                    fileName = fileName + "_1." + baselinenumber;
                }
            } else {
                fileName = newer.get(i).getName();
            }
            File dest = new File(destPath.getText() + "\\" + fileName);
            println(dest + " will be created.");
            int result = javax.swing.JOptionPane.showConfirmDialog(this, dest + " will be created", "Create File", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
            if (result == javax.swing.JOptionPane.YES_OPTION) {
                dest.mkdir();
            } else if (result == javax.swing.JOptionPane.CANCEL_OPTION) {
                break;
            }
            if (!newer.get(i).getName().equals(fileName)) {
                File src = new File(srcPath.getText() + "\\" + fileName);
                println(newer.get(i) + " will be renamed to " + src);
                result = javax.swing.JOptionPane.showConfirmDialog(this, newer.get(i) + " will be renamed to " + src, "Rename File", javax.swing.JOptionPane.YES_NO_CANCEL_OPTION);
                if (result == javax.swing.JOptionPane.YES_OPTION) {
                    boolean renameTo = newer.get(i).renameTo(src);
                    if (!renameTo) {
                        println("Rename failed.");
                    }
                } else if (result == javax.swing.JOptionPane.CANCEL_OPTION) {
                    break;
                }
            }
            //break; // TODO delete this line
        }
        newer.clear();
        println("done");
    }//GEN-LAST:event_applyActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteActionPerformed

    private void chooseDestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseDestActionPerformed
        JFileChooser jfc = new JFileChooser(destPath.getText());
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = jfc.showDialog(this, "Select Path");
        if (result == JFileChooser.APPROVE_OPTION) {
            destPath.setText(jfc.getSelectedFile().toString());
        }
    }//GEN-LAST:event_chooseDestActionPerformed

    public void println(String txt) {
        output.append(txt + "\n");
        System.out.println(txt);
    }

    public static void setLookAndFeel() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton apply;
    private javax.swing.JButton check;
    private javax.swing.JButton chooseDest;
    private javax.swing.JButton chooseSrc;
    private javax.swing.JButton delete;
    private javax.swing.JTextField destPath;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea output;
    private javax.swing.JTextField srcPath;
    // End of variables declaration//GEN-END:variables

}
