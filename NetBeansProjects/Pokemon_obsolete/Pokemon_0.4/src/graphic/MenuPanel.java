/*
 * Copyright (C) 2016 Dominik
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package graphic;

import java.awt.Color;
import java.awt.Graphics;
import spiel.Konstanten;

/**
 *
 * @author Dominik
 */
public class MenuPanel extends javax.swing.JPanel {

    private static int active = 0;

    public static boolean hasActiveInstance() {
        return active > 0;
    }

    private String[] values;
    private int sel;

    /**
     * Creates new form MenuPanel
     */
    private MenuPanel() {
        this(new String[]{"Line 1", "Line 2", "Line 3"});
    }

    public MenuPanel(String... menuItems) {
        initComponents();
        values = menuItems;
    }

    @Override
    public void setVisible(boolean visible) {
        if (this.isVisible() != visible) {
            if (visible) {
                active++;
            } else {
                active--;
            }
            super.setVisible(visible);
        }
    }

    public String[] getValues() {
        return values;
    }

    public void setValues(String[] values) {
        this.values = values;
        repaint();
    }

    public int getSelectedIndex() {
        return sel;
    }

    public void setSelectedIndex(int index) {
        while (index < 0) {
            index += values.length;
        }
        while (index >= values.length) {
            index -= values.length;
        }
        sel = index;
    }

    public void onSelect() {

    }

    @Override
    public void paintComponent(Graphics g) {
        draw(g);
    }

    public void draw(Graphics g) {
        java.awt.Rectangle bounds = g.getClipBounds();
        int width = bounds.width;
        int height = bounds.height;
        int vgap = height / (1 + values.length * 3);
        int hgap = width / 12;
        g.setFont(new java.awt.Font(spiel.Konstanten.DEFAULT_FONT_NAME, 0, vgap));
        g.setColor(Konstanten.BACKGROUND);
        g.fillRect(0, 0, width, height);
        g.setColor(Color.BLACK);
        for (int i = 0, y = vgap; i < values.length; i++, y += vgap * 3) {
            if (i == sel) {
                g.drawRect(hgap, y, width - hgap * 2, vgap * 2);
            }
            g.drawString(values[i], hgap * 2, y + vgap * 4 / 3);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 179, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 338, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
