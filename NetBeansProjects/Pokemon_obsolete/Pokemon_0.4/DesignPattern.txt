This is a short instruction of how to design the Pokemon project.

(I) GUI controls

----------------------------------------------------------------------------------------------------------------------------

How to print text:
1. Use the methods of the singleton instance IOMANAGER in the class io.IO.
2. Choose a value from the MessageType enum in the class io.IO refering to their documentation.

----------------------------------------------------------------------------------------------------------------------------

How to use the GUI components:
- the class MainFrame inherits the static singleton variable WINDOW to control the GUI.
- switch the displayed main panel by the graphic.MainFrame.WINDOW.setMainPanel(MainPanel) method.

----------------------------------------------------------------------------------------------------------------------------

(II) Add new contents

----------------------------------------------------------------------------------------------------------------------------

How to add a Pokemon:
1. Define a Text enum in language.Text.java with the name of the Pokemon in the specific language.
2. Define a PokemonBasis enum entry in pokemon.PokemonBasis.java with the basic values and the Text value defined in step 1.
3. You may need to define new values like attacks, types, abilities etc.
4. Add an Image for the Pokemon in pokemon.img named like pokemonnameIcon.png.

----------------------------------------------------------------------------------------------------------------------------

How to add an Attack:
// TODO

----------------------------------------------------------------------------------------------------------------------------

How to add a Location:
1. Define a private Ort variable in spiel.Spielwelt.java for an instance of the Ort.
2. Add this variable to the array in the spiel.Spielwelt.getOrte() method.
3. Add a soundfile as background music for this ort named like locname.wav (see how to add a soundfile).
4. Create a method in welt.Ort.java to initialize the Ort.
- You may need to define some new Objekts.

----------------------------------------------------------------------------------------------------------------------------

How to add an Objekt:
There are two ways to define an Objekt depending on its function.
EITHER
If the Objekt has small functionality and static behaviour (e.g. just as decor):
1. Define a public static final Objekt variable in welt.Objekt.java
2. You may need to add a new Image for this Objekt

OR
If the Objekt uses complex mechanisms and inherits own attributes(e.g. a person):
1. Create a new java class for this Objekt in the package welt which extends the class Objekt or AnimatedObjekt (depending on its appearance).
2. Override the methods of the superclass as needed.

----------------------------------------------------------------------------------------------------------------------------

How to add an Ability:

How to define a language:
1. edit the language file (somelike "lang.txt").
- make sure to define all values!
2. save it in a new language file.

----------------------------------------------------------------------------------------------------------------------------

How to add a Soundfile:
1. Make sure its a java supported format like .wav or .mid.
2. Paste the file into the sound directory. The program tries to load all files contained there.

----------------------------------------------------------------------------------------------------------------------------

How to add an Image:
1. Make sure its a java supported format like .png.
2. Paste the image file into the image package.
3. Add a value to the ImageFile enum in the class image.ImageIO using the filename of the image file.

