/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tools;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import spiel.Javamon;
import welt.objekte.*;
import welt.orte.Ort;

/**
 *
 * @author Dundun
 */
public class OrtEditor extends javax.swing.JFrame implements MouseMotionListener{
    public static final Objekt START=new welt.objekte.Objekt(true) {

        @Override
        public void benutzt() {}

        @Override
        protected void betreten() {}

        @Override
        public void paintComponent(Graphics g, int spot) {
            g.setColor(Color.red);
            g.drawRect(0,0,spot-1,spot-1);
        }
        
        @Override
        public String toString(){
            return "Startpunkt";
        }
    };
    
    
    public OrtEditor() {
        setTitle("Ort Editor");
        initComponents();
        objektAuswahl.setModel(new javax.swing.DefaultComboBoxModel(new Objekt[]{
            null,START,Objekt.AUTOMAT,Objekt.BLUMEN,Objekt.BODEN,Objekt.BOX,Objekt.GRAS,Objekt.HEILFLÄCHE,
            Objekt.MOOS,new Schild(),Objekt.STEIN,Objekt.STUFE_UNTEN,new Tür(),Objekt.WASSER,Objekt.WEG,
            Objekt.WIESE,new Person(),new Münzhändler(),new Münztauscher(),new Markt(),new TrainerObjekt(),
            Objekt.HAUSWAND,Objekt.HÜTTENDACH
        }));
        background.setModel(new javax.swing.DefaultComboBoxModel(new Objekt[]{
            Objekt.BODEN,Objekt.HINTERGRUND,Objekt.GRAS,Objekt.HEILFLÄCHE,
            Objekt.WASSER,Objekt.WEG,Objekt.WIESE,Objekt.SCHWARZ,Objekt.WEIS
        }));
        standart.setModel(new javax.swing.DefaultComboBoxModel(new Objekt[]{
            Objekt.BODEN,Objekt.STEIN,Objekt.BLUMEN,Objekt.GRAS,Objekt.HEILFLÄCHE,
            Objekt.MOOS,Objekt.STUFE_UNTEN,Objekt.WASSER,Objekt.WEG,
            Objekt.WIESE,Objekt.HINTERGRUND,Objekt.SCHWARZ,Objekt.WEIS
        }));
        oC.addMouseMotionListener(this);
        oC.getOrt().setBackground((Objekt)background.getSelectedItem());
        oC.getOrt().setStandart((Objekt)standart.getSelectedItem());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        objektAuswahl = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        oC = new tools.OrtComponent();
        jLabel2 = new javax.swing.JLabel();
        background = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        standart = new javax.swing.JComboBox();
        pokWahl = new javax.swing.JButton();
        koords = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        neu = new javax.swing.JMenuItem();
        speichern = new javax.swing.JMenuItem();
        laden = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        kleiner = new javax.swing.JMenuItem();
        größer = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        objektAuswahl.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        objektAuswahl.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                objektAuswahlItemStateChanged(evt);
            }
        });

        jLabel1.setText("Auswahl:");

        javax.swing.GroupLayout oCLayout = new javax.swing.GroupLayout(oC);
        oC.setLayout(oCLayout);
        oCLayout.setHorizontalGroup(
            oCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );
        oCLayout.setVerticalGroup(
            oCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(oC);

        jLabel2.setText("Hintergrund");

        background.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        background.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                backgroundItemStateChanged(evt);
            }
        });

        jLabel3.setText("Standart");

        standart.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        standart.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                standartItemStateChanged(evt);
            }
        });

        pokWahl.setText("Pokemon Auswahl");
        pokWahl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pokWahlActionPerformed(evt);
            }
        });

        koords.setText("Mauskoordinaten: x|y");

        file.setText("File");

        neu.setText("New");
        neu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                neuActionPerformed(evt);
            }
        });
        file.add(neu);

        speichern.setText("Save");
        speichern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speichernActionPerformed(evt);
            }
        });
        file.add(speichern);

        laden.setText("Load");
        laden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ladenActionPerformed(evt);
            }
        });
        file.add(laden);

        jMenuItem2.setText("Spiel hier starten");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        file.add(jMenuItem2);

        jMenuBar1.add(file);

        edit.setText("Edit");

        jMenuItem1.setText("sinnloser Knopf");
        edit.add(jMenuItem1);

        kleiner.setText("verkleinern");
        kleiner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kleinerActionPerformed(evt);
            }
        });
        edit.add(kleiner);

        größer.setText("vergrößern");
        größer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                größerActionPerformed(evt);
            }
        });
        edit.add(größer);

        jMenuBar1.add(edit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(background, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addComponent(jLabel3))
                                .addComponent(objektAuswahl, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(standart, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pokWahl)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(koords)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(6, 6, 6)
                        .addComponent(objektAuswahl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel2)
                        .addGap(6, 6, 6)
                        .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel3)
                        .addGap(6, 6, 6)
                        .addComponent(standart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pokWahl)
                        .addGap(0, 88, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(koords))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void objektAuswahlItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_objektAuswahlItemStateChanged
      oC.setSelectedObjekt((Objekt)objektAuswahl.getSelectedItem());
    }//GEN-LAST:event_objektAuswahlItemStateChanged

    private void neuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_neuActionPerformed
        new NewOrt(oC).setVisible(true);
    }//GEN-LAST:event_neuActionPerformed

    private void speichernActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speichernActionPerformed
      JFileChooser jFC = new javax.swing.JFileChooser();
     if(jFC.showSaveDialog(this)==javax.swing.JFileChooser.APPROVE_OPTION){
         oC.save(jFC.getSelectedFile());
     }
    }//GEN-LAST:event_speichernActionPerformed

    private void backgroundItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_backgroundItemStateChanged
      oC.getOrt().setBackground((Objekt)background.getSelectedItem());
    }//GEN-LAST:event_backgroundItemStateChanged

    private void standartItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_standartItemStateChanged
      oC.getOrt().setStandart((Objekt)standart.getSelectedItem());
    }//GEN-LAST:event_standartItemStateChanged

    private void ladenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ladenActionPerformed
      JFileChooser jFC = new javax.swing.JFileChooser();
      if(oC.wurdeGeaendert() && javax.swing.JOptionPane.showConfirmDialog(
                this,"Es wurden Änderungen vorgenommen.\n Speichern?","Warnung",javax.swing.JOptionPane.YES_NO_OPTION)==
                javax.swing.JOptionPane.YES_OPTION){
            speichernActionPerformed(evt);
        }
        else if(jFC.showOpenDialog(this)==javax.swing.JFileChooser.APPROVE_OPTION){
              oC.lade(jFC.getSelectedFile());
              setTitle(jFC.getSelectedFile().getName());
          }
    }//GEN-LAST:event_ladenActionPerformed

    private void kleinerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kleinerActionPerformed
      kleiner.setEnabled(oC.kleiner());
      größer.setEnabled(true);
    }//GEN-LAST:event_kleinerActionPerformed

    private void größerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_größerActionPerformed
      größer.setEnabled(oC.größer());
      kleiner.setEnabled(true);
    }//GEN-LAST:event_größerActionPerformed

    private void pokWahlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pokWahlActionPerformed
        PokedexGUI gui=new PokedexGUI(oC.getOrt().getPoks());
        gui.setModal(true);
        gui.setVisible(true);
        while(gui.isVisible());
        oC.getOrt().setPoks(gui.getPokSelection());
    }//GEN-LAST:event_pokWahlActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
      if(getDefaultCloseOperation()==DISPOSE_ON_CLOSE){
          dispose();
          return;
      }
      if(oC.wurdeGeaendert() && javax.swing.JOptionPane.showConfirmDialog(
                this,"Es wurden Änderungen vorgenommen.\n Speichern?","Warnung",javax.swing.JOptionPane.YES_NO_OPTION)==
                javax.swing.JOptionPane.YES_OPTION){
            speichernActionPerformed(null);
        }else{
          System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        Javamon.startort=oC.getOrt();
        Javamon.neustart("Ash",new pokemon.Pikachu(5));
        dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox background;
    private javax.swing.JMenu edit;
    private javax.swing.JMenu file;
    private javax.swing.JMenuItem größer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem kleiner;
    private javax.swing.JLabel koords;
    private javax.swing.JMenuItem laden;
    private javax.swing.JMenuItem neu;
    protected tools.OrtComponent oC;
    private javax.swing.JComboBox objektAuswahl;
    private javax.swing.JButton pokWahl;
    private javax.swing.JMenuItem speichern;
    private javax.swing.JComboBox standart;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseDragged(MouseEvent e) {
        int x=e.getX()/oC.getSpot(),y=e.getY()/oC.getSpot();
        String text=koords.getText();
        if(text.indexOf("-")>0) text=text.substring(0,text.indexOf("-"));
        koords.setText(text+"-"+x+"|"+y);
    }

    @Override
    public void mouseMoved(MouseEvent e) {
        int x=e.getX()/oC.getSpot(),y=e.getY()/oC.getSpot();
        koords.setText("Mauskoordinaten: "+x+"|"+y);
    }
    
    public static void showOrtEditorDialog(Ort vorhanden){
        if(vorhanden==null)return;
        OrtEditor dialog=new OrtEditor();
        dialog.oC.setOrt(vorhanden);
        if(vorhanden.toString()==null)vorhanden.setName(JOptionPane.showInputDialog(dialog,"Der Ort hat keinen Namen.\nJetzt umbenennen?","Umbenennen",JOptionPane.YES_NO_OPTION));
        if(vorhanden.toString()==null) dialog.setTitle("unbenannter Ort");
        else dialog.setTitle(vorhanden.toString());
        dialog.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        dialog.setVisible(true);
        dialog.requestFocus();
    }
}