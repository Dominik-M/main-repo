package spiel;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

public class Handel extends javax.swing.JPanel implements KeyListener{
    private Spieler spieler;
    private welt.items.Item[] angebot;

    public Handel(welt.items.Item... waren) {
      setLocation(Javamon.getLoc());
      spieler=Javamon.getSpieler();
      angebot=waren;
      initComponents();
      paintLabels();
      marktItems.setModel(new javax.swing.AbstractListModel() {
            public int getSize() { return angebot.length; }
            public Object getElementAt(int i) { return angebot[i]; }
        });
      this.addKeyListener(this);
      spielerItems.addKeyListener(this);
      verkauf.addKeyListener(this);
      kauf.addKeyListener(this);
      menge.addKeyListener(this);
      marktItems.addKeyListener(this);
    }
    
    public void paintLabels(){
      spielerName.setText(spieler.name);
      geld.setText("Geld: "+spieler.getGeld());
      spielerItems.setModel(new javax.swing.AbstractListModel() {
            welt.items.Item[] i = Javamon.getSpieler().getitems();
            public int getSize() { return i.length; }
            public Object getElementAt(int j) { return i[j]; }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        marktItems = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        spielerItems = new javax.swing.JList();
        marktName = new javax.swing.JLabel();
        spielerName = new javax.swing.JLabel();
        kauf = new javax.swing.JButton();
        menge = new javax.swing.JSpinner();
        verkauf = new javax.swing.JButton();
        geld = new javax.swing.JLabel();
        preis = new javax.swing.JLabel();

        marktItems.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        marktItems.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                marktItemsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(marktItems);

        spielerItems.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                spielerItemsValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(spielerItems);

        marktName.setText("Markt");

        spielerName.setText("Spieler");

        kauf.setText("Kaufen");
        kauf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kaufActionPerformed(evt);
            }
        });

        menge.setModel(new javax.swing.SpinnerNumberModel(1, 1, 99, 1));
        menge.setToolTipText("Menge");
        menge.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mengeStateChanged(evt);
            }
        });

        verkauf.setText("Verkaufen");
        verkauf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verkaufActionPerformed(evt);
            }
        });

        geld.setText("Geld:");

        preis.setText("Preis: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(geld)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(kauf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(menge)
                            .addComponent(verkauf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(preis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(spielerName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(marktName)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(marktName)
                    .addComponent(spielerName))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(geld)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(verkauf)
                        .addGap(18, 18, 18)
                        .addComponent(menge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(preis)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kauf)
                        .addGap(0, 111, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void verkaufActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verkaufActionPerformed
      if(spielerItems.getSelectedIndex()<0)return;
      int[] indices=spielerItems.getSelectedIndices();
      for(int i=indices.length-1;i>=0;i--){
        int wert=spieler.getitems()[indices[i]].getWert()/2;
        if(wert<=0)continue;
        spieler.giveGeld(wert);
        spieler.removeItem(indices[i]);
      }
      paintLabels();
    }//GEN-LAST:event_verkaufActionPerformed

    private void kaufActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kaufActionPerformed
      if(marktItems.getSelectedIndex()<0)return;
      welt.items.Item item=(welt.items.Item)marktItems.getSelectedValue();
      int anz=(int)menge.getValue();
      int kosten=anz*item.getWert();
      if(kosten<=spieler.getGeld()){
        spieler.addItem(item, anz);
        spieler.giveGeld(-kosten);
      }
      paintLabels();
    }//GEN-LAST:event_kaufActionPerformed

    private void marktItemsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_marktItemsValueChanged
      if(marktItems.getSelectedIndex()<0)return;
      preis.setText("Preis: "+((welt.items.Item)marktItems.getSelectedValue()).getWert()*(int)menge.getValue());
      marktItems.setToolTipText(((welt.items.Item)marktItems.getSelectedValue()).getToolTipText());
    }//GEN-LAST:event_marktItemsValueChanged

    private void mengeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mengeStateChanged
      if(marktItems.getSelectedIndex()>=0)preis.setText("Preis: "+((welt.items.Item)marktItems.getSelectedValue()).getWert()*(int)menge.getValue());
    }//GEN-LAST:event_mengeStateChanged

    private void spielerItemsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_spielerItemsValueChanged
      if(spielerItems.getSelectedIndex()<0)return;
      spielerItems.setToolTipText(((welt.items.Item)spielerItems.getSelectedValue()).getToolTipText());
      int[] indices=spielerItems.getSelectedIndices();
      int wert=0;
      for(int i=indices.length-1;i>=0;i--){
        wert+=spieler.getitems()[indices[i]].getWert()/2;
      }
      preis.setText("Preis: -"+wert);
    }//GEN-LAST:event_spielerItemsValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel geld;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton kauf;
    private javax.swing.JList marktItems;
    private javax.swing.JLabel marktName;
    private javax.swing.JSpinner menge;
    private javax.swing.JLabel preis;
    private javax.swing.JList spielerItems;
    private javax.swing.JLabel spielerName;
    private javax.swing.JButton verkauf;
    // End of variables declaration//GEN-END:variables

    private java.awt.Container getContentPane() {
        return this;
    }

    @Override
    public void keyTyped(KeyEvent e) {}

    @Override
    public void keyPressed(KeyEvent e) {
        int key=e.getKeyCode();
        if(key==Steuerung.getB()){
            Javamon.displayDefault();
        }else if(this.hasFocus()){
            spielerItems.requestFocusInWindow();
        }else if(spielerItems.hasFocus()){
            if(key==Steuerung.getUp()){
                if(spielerItems.getSelectedIndex()<=0)return;
                spielerItems.setSelectedIndex(spielerItems.getSelectedIndex()-1);
            }else if(key==Steuerung.getDown()){
                spielerItems.setSelectedIndex(spielerItems.getSelectedIndex()+1);
            }else if(key==Steuerung.getRight() || key==Steuerung.getA()){
                verkauf.requestFocusInWindow();
            }
        }else if(verkauf.hasFocus()){
            if(key==Steuerung.getDown()){
                menge.requestFocusInWindow();
            }else if(key==Steuerung.getLeft()){
                spielerItems.requestFocusInWindow();
            }else if(key==Steuerung.getRight()){
                marktItems.requestFocusInWindow();
            }
        }else if(marktItems.hasFocus()){
            if(key==Steuerung.getUp()){
                if(marktItems.getSelectedIndex()<=0)return;
                marktItems.setSelectedIndex(marktItems.getSelectedIndex()-1);
            }else if(key==Steuerung.getDown()){
                marktItems.setSelectedIndex(marktItems.getSelectedIndex()+1);
            }else if(key==Steuerung.getLeft() || key==Steuerung.getA()){
                kauf.requestFocusInWindow();
            }
        }else if(kauf.hasFocus()){
            if(key==Steuerung.getUp()){
                menge.requestFocusInWindow();
            }else if(key==Steuerung.getLeft()){
                spielerItems.requestFocusInWindow();
            }else if(key==Steuerung.getRight()){
                marktItems.requestFocusInWindow();
            }
        }else if(menge.hasFocus()){
            if(key==Steuerung.getDown()){
                kauf.requestFocusInWindow();
            }else if(key==Steuerung.getUp()){
                verkauf.requestFocusInWindow();
            }else if(key==Steuerung.getLeft()){
                if((int)menge.getValue()>1)
                menge.setValue((int)menge.getValue()-1);
            }else if(key==Steuerung.getRight()){
                menge.setValue((int)menge.getValue()+1);
            }
        }
    }

    @Override
    public void keyReleased(KeyEvent e) {}
}