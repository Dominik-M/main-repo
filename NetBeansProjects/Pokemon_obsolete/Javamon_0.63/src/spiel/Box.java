package spiel;

import java.awt.Container;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

public class Box extends javax.swing.JPanel implements KeyListener{
    private java.util.LinkedList<pokemon.Pokemon> boxPoks;
    private Trainer spieler;

    /**
     * Creates new form Box
     */
    public Box() {
      boxPoks=Javamon.getBox();
      spieler=Javamon.getSpieler();
      initComponents();
      this.addKeyListener(this);
      setLocation(Javamon.getLoc());
      paintLabels();
    }
    
    private void paintLabels(){
      name.setText(spieler.toString());
      spielers.setModel(new javax.swing.AbstractListModel() {
            public int getSize() { return spieler.pokemon.length; }
            public Object getElementAt(int i) { return spieler.pokemon[i]; }
        });
      box.setModel(new javax.swing.AbstractListModel() {
            public int getSize() { return boxPoks.size(); }
            public Object getElementAt(int i) { return boxPoks.get(i); }
        });
      int anz=0;
      while(anz<spieler.pokemon.length && spieler.pokemon[anz]!=null)anz++;
      mitnehmen.setEnabled(anz<6);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        box = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        spielers = new javax.swing.JList();
        name = new javax.swing.JLabel();
        ablegen = new javax.swing.JButton();
        mitnehmen = new javax.swing.JButton();

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        box.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(box);

        jScrollPane3.setViewportView(spielers);

        name.setText("spieler");

        ablegen.setText(">>ablegen>>");
        ablegen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ablegenActionPerformed(evt);
            }
        });

        mitnehmen.setText("<<mitnehmen<<");
        mitnehmen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitnehmenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ablegen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mitnehmen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(name)))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(name)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(ablegen, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mitnehmen, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ablegenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ablegenActionPerformed
      int[] indices=spielers.getSelectedIndices();
      for(int i=indices.length-1;i>=0;i--){
        pokemon.Pokemon pok=spieler.pokemon[indices[i]];
        if(pok==null)continue;
        if(spieler.removePok(indices[i])) boxPoks.add(pok);
        else break;
      }
      paintLabels();
    }//GEN-LAST:event_ablegenActionPerformed

    private void mitnehmenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitnehmenActionPerformed
      int[] indices=box.getSelectedIndices();
      for(int i=indices.length-1;i>=0;i--){
        if(spieler.givePokemon(boxPoks.get(indices[i])))boxPoks.remove(indices[i]);
        else break;
      }
      paintLabels();
    }//GEN-LAST:event_mitnehmenActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ablegen;
    private javax.swing.JList box;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton mitnehmen;
    private javax.swing.JLabel name;
    private javax.swing.JList spielers;
    // End of variables declaration//GEN-END:variables

    private Container getContentPane() {
        return this;
    }

    private void setDefaultCloseOperation(int DISPOSE_ON_CLOSE) {
    }

    @Override
    public void keyTyped(KeyEvent e) {}

    @Override
    public void keyPressed(KeyEvent e) {
        if(e.getKeyCode()==Steuerung.getB()){
            Javamon.displayDefault();
        }
    }

    @Override
    public void keyReleased(KeyEvent e) {}
}
