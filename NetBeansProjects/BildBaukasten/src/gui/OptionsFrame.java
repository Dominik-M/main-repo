/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import javax.swing.JFrame;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import main.Settings;

/**
 *
 * @author Dominik Messerschmidt
 */
public class OptionsFrame extends JFrame
{

    /**
     * Creates new form OptionsFrame
     *
     * @param parent Frame from where the Option Window was opened to get the
     * location
     */
    public OptionsFrame(JFrame parent)
    {
        initComponents();
        if (parent != null)
        {
            this.setLocation(parent.getLocation());
        }
        cstSlider.addChangeListener(new ChangeListener()
        {
            @Override
            public void stateChanged(ChangeEvent ce)
            {
                Settings.getInstance().setColorSelectThreshold(cstSlider.getValue());

            }
        });
        scaleSlider.addChangeListener(new ChangeListener()
        {
            @Override
            public void stateChanged(ChangeEvent ce)
            {
                Settings.getInstance().setLogoScale(scaleSlider.getValue());

            }
        });
        onSettingChanged();
    }

    private void onSettingChanged()
    {
        cstSlider.setValue(Settings.getInstance().getColorSelectThreshold());
        logopathTextField.setText(Settings.getInstance().getLogoPath());
        xPosTextField.setText(Settings.getInstance().getDefaultLogoPositionX() + "");
        yPosTextField.setText(Settings.getInstance().getDefaultLogoPositionY() + "");
        rotationTextField.setText(Settings.getInstance().getLogoRotation() + "");
        scaleSlider.setValue(Settings.getInstance().getLogoScale());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        cstSlider = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        logopathTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        xPosTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        yPosTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        rotationTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        scaleSlider = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Color select threshold");

        cstSlider.setMajorTickSpacing(50);
        cstSlider.setMaximum(255);
        cstSlider.setMinorTickSpacing(5);
        cstSlider.setPaintLabels(true);
        cstSlider.setPaintTicks(true);

        jLabel2.setText("Logo file");

        logopathTextField.setText("D:\\\\Bilder\\\\Phuong\\\\Logo_edit.png");
        logopathTextField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                logopathTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Position");

        jLabel4.setText("X:");

        xPosTextField.setText("100");
        xPosTextField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                xPosTextFieldActionPerformed(evt);
            }
        });

        jLabel5.setText("Y:");

        yPosTextField.setText("100");
        yPosTextField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                yPosTextFieldActionPerformed(evt);
            }
        });

        jLabel6.setText("Rotation:");

        rotationTextField.setText("360");
        rotationTextField.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rotationTextFieldActionPerformed(evt);
            }
        });

        jLabel7.setText("Scale");

        scaleSlider.setMajorTickSpacing(50);
        scaleSlider.setMaximum(500);
        scaleSlider.setMinorTickSpacing(10);
        scaleSlider.setPaintLabels(true);
        scaleSlider.setPaintTicks(true);
        scaleSlider.setSnapToTicks(true);
        scaleSlider.setValue(100);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cstSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scaleSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(logopathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(xPosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yPosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rotationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 109, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cstSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logopathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(xPosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(yPosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(rotationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(scaleSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(133, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void xPosTextFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_xPosTextFieldActionPerformed
    {//GEN-HEADEREND:event_xPosTextFieldActionPerformed
        System.out.println("xPosTextFieldActionPerformed");
        applySettings();
    }//GEN-LAST:event_xPosTextFieldActionPerformed

    private void logopathTextFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_logopathTextFieldActionPerformed
    {//GEN-HEADEREND:event_logopathTextFieldActionPerformed
        System.out.println("logopathTextFieldActionPerformed");
        applySettings();
    }//GEN-LAST:event_logopathTextFieldActionPerformed

    private void yPosTextFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_yPosTextFieldActionPerformed
    {//GEN-HEADEREND:event_yPosTextFieldActionPerformed
        System.out.println("yPosTextFieldActionPerformed");
        applySettings();
    }//GEN-LAST:event_yPosTextFieldActionPerformed

    private void rotationTextFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rotationTextFieldActionPerformed
    {//GEN-HEADEREND:event_rotationTextFieldActionPerformed
        System.out.println("rotationTextFieldActionPerformed");
        applySettings();
    }//GEN-LAST:event_rotationTextFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider cstSlider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField logopathTextField;
    private javax.swing.JTextField rotationTextField;
    private javax.swing.JSlider scaleSlider;
    private javax.swing.JTextField xPosTextField;
    private javax.swing.JTextField yPosTextField;
    // End of variables declaration//GEN-END:variables

    private void applySettings()
    {
        Settings.getInstance().setLogoPath(logopathTextField.getText());
        try
        {
            int xPos = Integer.parseInt(xPosTextField.getText());
            Settings.getInstance().setDefaultLogoPositionX(xPos);
        }
        catch (NumberFormatException ex)
        {
            System.out.println("Failed to parse int: " + xPosTextField.getText());
            xPosTextField.setText(Settings.getInstance().getDefaultLogoPositionX() + "");
        }
        try
        {
            int yPos = Integer.parseInt(yPosTextField.getText());
            Settings.getInstance().setDefaultLogoPositionY(yPos);
        }
        catch (NumberFormatException ex)
        {
            System.out.println("Failed to parse int: " + yPosTextField.getText());
            yPosTextField.setText(Settings.getInstance().getDefaultLogoPositionY() + "");
        }
        try
        {
            int rot = Integer.parseInt(rotationTextField.getText());
            Settings.getInstance().setLogoRotation(rot);
        }
        catch (NumberFormatException ex)
        {
            System.out.println("Failed to parse int: " + rotationTextField.getText());
            rotationTextField.setText(Settings.getInstance().getDefaultLogoPositionX() + "");
        }
    }
}
