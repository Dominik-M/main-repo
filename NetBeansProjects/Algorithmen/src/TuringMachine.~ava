public class TuringMachine {
  String band;
  int pos=0;
  String aktuell;
  String regeln;
  public static final char LEER='�'; // Das Zeichen, das für eine leere Stelle im Band steht
  
  public TuringMachine(String p,String arg){
    regeln=p;
    band=arg;
    aktuell=p.substring(0,p.indexOf(','));
  }
  
  public String verarbeite(String s){
    band=s;
    return verarbeite();
  }
  
  public String verarbeite(){
    if(band.length()==0)band=""+LEER;
      System.out.print(this+" -> ");
    while(!aktuell.startsWith("-")){  // solange nicht in einem Endzustand
      String regel=aktuell+","+band.charAt(pos);
      int start=regeln.indexOf(regel);//suche nach Regel f�r aktuellen Zustand und Zeichen
      if(start<0){
          System.out.println("nicht akzeptiertes Wort");// keine Regel gefunden, also abbrechen
          break;
      }
      start+=regel.length();  //springe zur Position der "rechten Seite" dieser Regel
      int ende=regeln.indexOf("_",start);  //finde das Ende dieser Regel
      if(ende<0)ende=regeln.length();
      regel=regeln.substring(start,ende);  //  schneide die "rechte Seite" der Regel aus
      start=regel.indexOf(";");     //finde Ende des Zustandnamens
      aktuell=regel.substring(0,start); // schneide den Zustandsnamen aus
      char neu=regel.charAt(++start); // merke das zu schreibende Zeichen
      String vorne=band.substring(0,pos);// teile das Band in einen vorderen-
      String hinten=band.substring(1+pos); // und hinteren Teil
      band=vorne+neu+hinten;                 //  f�ge das neue Zeichen dazwischen ein
      if(regel.charAt(++start)=='R'){      // wenn ein R folgt
         pos++;                               //geh nach rechts
        if(band.length()<=pos) band=band+LEER; // h�nge ein Leerzeichen an, wenn Band zu kurz
      }else if(regel.charAt(start)=='L'){
        if(pos==0) {  //wenn ganz links
          band=LEER+band;  //setze ein Leerzeichen davor
        }
        else {
          pos--;  // ansonsten nach links gehen
        }
      }  // N wird nicht abgefragt, da dann sowieso nichts passiert
      System.out.print(this+" -> ");
    }
    return band.substring(pos);  // gibt alles rechts der Position auf dem Band zurück
  }
  
    @Override
  public String toString(){
    String vorne=band.substring(0,pos);// teile das Band in einen vorderen-
    String hinten=band.substring(pos); // und hinteren Teil
    return vorne+aktuell+hinten;
  }
  
//   Regeln f�r die Regeln:
//     Erst wird der Anfangszustand genannt,
//     dann mit Komma getrennt das zu lesende Zeichen
//     gefolgt vom Zustand, zu dem die Regel f�hrt
//     mit Semikolon getrennt vom zu schreibenden Zeichen
//     und zum Schluss R,L oder N um die Richtung zu geben.
//     Die Regeln werden mit '_' getrennt.
//     Zustände, deren Namen mit einem '-' beginnen, sind Endzustände.
  
  public static void main(String[] args){
    if(args.length!=2){
      System.out.println("Beispiel für Argumente:q1,0q1;0R_q1,1q1;1R_q1,"+LEER+"q2;"+LEER+"L_q2,1q2;0L_q2,0q3;1L_q2,"+LEER+"-q;1N_q3,0q3;0L_q3,1q3;1L_q3,"+LEER+"-q;"+LEER+"R 1011");
      // Als Beispiel wird der 1-Addierer gegeben
      return;
    }
      TuringMachine turingenMaschine=new TuringMachine(args[0],args[1]);
      System.out.print(turingenMaschine.verarbeite());
  }
}