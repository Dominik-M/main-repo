/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package programm;

import mathe.Mathe;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author Katharina
 */
public class BinomialPanel extends javax.swing.JPanel implements ChangeListener, ActionListener{

    /**
     * Creates new form NewJPanel
     */
    public BinomialPanel() {
        initComponents();
        nSlider.addChangeListener(this);
        k1Slider.addChangeListener(this);
        k2Slider.addChangeListener(this);
        pSlider.addChangeListener(this);
        rechne.addActionListener(this);
        rechne.doClick();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nSlider = new javax.swing.JSlider();
        nLabel = new javax.swing.JLabel();
        k2Label = new javax.swing.JLabel();
        k1Label = new javax.swing.JLabel();
        k1Slider = new javax.swing.JSlider();
        k2Slider = new javax.swing.JSlider();
        pSlider = new javax.swing.JSlider();
        pLabel = new javax.swing.JLabel();
        peLabel = new javax.swing.JLabel();
        rechne = new javax.swing.JButton();

        nSlider.setMajorTickSpacing(10);
        nSlider.setPaintLabels(true);
        nSlider.setPaintTicks(true);

        nLabel.setText("n = 50");

        k2Label.setText("k2 = 10");

        k1Label.setText("k1 = 0");

        k1Slider.setMajorTickSpacing(10);
        k1Slider.setMinorTickSpacing(10);
        k1Slider.setPaintLabels(true);
        k1Slider.setPaintTicks(true);
        k1Slider.setValue(0);

        k2Slider.setMajorTickSpacing(10);
        k2Slider.setPaintLabels(true);
        k2Slider.setPaintTicks(true);
        k2Slider.setValue(10);

        pSlider.setMajorTickSpacing(10);
        pSlider.setPaintLabels(true);
        pSlider.setPaintTicks(true);
        pSlider.setValue(10);

        pLabel.setText("p = 10 %");

        peLabel.setText("P = %");

        rechne.setText("Berechnen");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(layout.createSequentialGroup()
                            .add(k1Label)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(k1Slider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(layout.createSequentialGroup()
                            .add(nLabel)
                            .add(27, 27, 27)
                            .add(nSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(k2Label)
                            .add(pLabel))
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(layout.createSequentialGroup()
                                .add(23, 23, 23)
                                .add(pSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(k2Slider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(10, 10, 10)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(rechne)))
                .addContainerGap(137, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(peLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(nLabel)
                    .add(nSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(8, 8, 8)
                        .add(k1Label))
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(k1Slider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(13, 13, 13)
                        .add(k2Label))
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(k2Slider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(pLabel)
                        .add(43, 43, 43))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(pSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 13, Short.MAX_VALUE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(rechne)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                        .add(peLabel)
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel k1Label;
    private javax.swing.JSlider k1Slider;
    private javax.swing.JLabel k2Label;
    private javax.swing.JSlider k2Slider;
    private javax.swing.JLabel nLabel;
    private javax.swing.JSlider nSlider;
    private javax.swing.JLabel pLabel;
    private javax.swing.JSlider pSlider;
    private javax.swing.JLabel peLabel;
    private javax.swing.JButton rechne;
    // End of variables declaration//GEN-END:variables

    @Override
    public void stateChanged(ChangeEvent e) {
      if(e.getSource().equals(nSlider)) {
            nLabel.setText("n = "+nSlider.getValue());
            if(nSlider.getValue()<k2Slider.getValue())k2Slider.setValue(nSlider.getValue());
        }
      if(e.getSource().equals(k1Slider)) {
            k1Label.setText("k1 = "+k1Slider.getValue());
        }
      if(e.getSource().equals(k2Slider)) {
            k2Label.setText("k2 = "+k2Slider.getValue());
            if(nSlider.getValue()<k2Slider.getValue())nSlider.setValue(k2Slider.getValue());
        }
      if(e.getSource().equals(pSlider)) {
            pLabel.setText("p = "+pSlider.getValue()+" %");
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        peLabel.setText("P = "+Mathe.kBV(nSlider.getValue(),pSlider.getValue()/100.0,k1Slider.getValue(),k2Slider.getValue())*100+"%");
    }
}